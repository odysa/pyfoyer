class CacheEntry:
    def key(self) -> bytes: ...
    def value(self) -> bytes: ...

class Cache:
    def __init__(self, capacity: int): ...
    def insert(self, key: bytes, value: bytes) -> CacheEntry: ...
    def contains(self, key: bytes) -> bool: ...
    def get(self, key: bytes) -> bytes | None: ...
    def remove(self, key: bytes) -> CacheEntry: ...
    def clear(self) -> None: ...
    def usage(self) -> int: ...
    def capacity(self) -> int: ...
    def shards(self) -> int: ...

class CacheBuilder:
    def __init__(self, capacity: int): ...
    def with_name(self, name: str) -> CacheBuilder: ...
    def with_shards(self, shards: int) -> CacheBuilder: ...
    def build(self) -> Cache: ...
